{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "VDCName": {
          "type": "string"
        },
        "storageType": {
          "type": "string",
          "metadata": {
            "description": "storage type for storage account in resource group."
          },
          "defaultValue": "LRS"
        },
        "FEsubnetName": {
            "type": "string",
            "defaultValue": "subnetFEFixed",
            "metadata": {
                "description": "Front End Fixed Subnet Name"
            }
        },
        "FEfixedIPAddress": {
          "type": "string",
          "metadata": {
            "description": "Fixed IP in FE Subnet"
          }
        },
        "SECsubnetName": {
            "type": "string",
            "defaultValue": "subnetSECFixed",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "SECFixedIPAddress" : {
            "type" : "string",
            "metadata" : {
                "description" : "SEC Subnet Fixed IP Address"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH Key for the virtual machines"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Authentication Type to chose for the Virtual Machines"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "CSR",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Public IP Address"
            }
        },
        "publicIPDnsName": {
            "type": "string",
            "defaultValue": "csrdns",
            "metadata": {
                "description": "Unique DNS Prefix for the Public IP used to access the Virtual Machine."
            }
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": "",
                "description": "URL to acquire other templates"
            },
            "defaultValue": "https://raw.githubusercontent.com/tzghardy/project0/master/cisco-csr-1000v"
        }
    },

    "variables": {
        "location": "[resourceGroup().location]",
        "imagePublisher": "cisco",
        "imageOffer": "cisco-csr-1000v",
        "imageSKU": "csr-azure-byol",
        "storageAccount": "[toLower(resourceGroup().Name,parameters('storageType'))]",
        "storageAccountUri": "[toLower(concat('https://',variables('storageAccount'),'.blob.core.windows.net/',parameters('vmName')))]",
        "OSDiskName": "osdisk",
        "vmStorageAccountContainerName": "csr",
        "virtualNetworkName": "[concat(parameters('VDCName'),'vnet')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "FESubnetIDBase":"[toLower(concat(parameters('VDCName'),parameters('FEsubnetName')))]",
        "SECSubnetIDBase": "[toLower(concat(parameters('VDCName'),parameters('SECsubnetName')))]",
        "vmSize": "Standard_D2",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('FESubnetIDBase'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', variables('SECSubnetIDBase'))]",
        "nsgName": "[concat(parameters('VDCName'),'nsg',parameters('FEsubnetName'))]",
        "nsgEndpoint": "[concat(parameters('FEfixedIPAddress'),'/32')]",
        "apiVer": "2015-06-15",
        "publicIPAddressType": "Dynamic",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "publicIPSetupURL": "[concat(parameters('baseUrl'),'/publicip.json')]",
        "osProfile": "[variables(concat('osprofile',parameters('authenticationType')))]",
        "osProfilesshPublicKey": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": "true",
                "ssh": {
                    "publicKeys": [
                        {
                            "path": "[variables('sshKeyPath')]",
                            "keyData": "[parameters('sshPublicKey')]"
                        }
                    ]
                }
            }
        },
        "osProfilepassword": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
        }
    },
    "resources": [
        {
            "name": "SettingUpPublicIP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicIPSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "publicIPAddressName": {
                        "value": "[parameters('publicIPAddressName')]"
                    },
                    "publicIPAddressType": {
                        "value": "[variables('publicIPAddressType')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('publicIPDnsName')]"
                    },
                    "publicIpRGName" : {
                        "value" : "[resourceGroup().name]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "mode": "Incremental",
                "securityRules": [
                    {
                        "name": "CSR_SSH_Allow",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "[variables('nsgEndpoint')]",
                            "access": "Allow",
                            "priority": 1100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-nic0')]",
            "location": "[variables('location')]",
            "dependsOn": [
              "[resourceId('Microsoft.Resources/deployments','SettingUpPublicIP')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('FEfixedIPAddress')]",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            },
                            "publicIPAddress": {
                              "id": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-nic1')]",
            "location": "[variables('location')]",
            "dependsOn": [],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('SECFixedIPAddress')]",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[variables('location')]",
            "plan": {
                "name": "csr-azure-byol",
                "publisher": "cisco",
                "product": "cisco-csr-1000v"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-nic0')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-nic1')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": "[variables('osProfile')]",
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(variables('storageAccountUri'), '/', variables('OSDiskName'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-nic0'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-nic1'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://', variables('storageAccount'), '.blob.core.windows.net')]"
                    }
                }
            }
        }
    ]
}
