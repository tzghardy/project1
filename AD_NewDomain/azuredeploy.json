{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters":
  {
    "location": {
      "type": "string",
    },
    "vdcName": {
      "type": "string",
      "defaultValue": "NoVDCName"
    },
    "networkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "resource group containint virtual network",
      },
      "defaultValue": "vdc2testnetwork"
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "virtual network name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "storage account name to deploy vm to"
      },
      "defaultValue": "vdc2testcoreslrs"
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet for the AD Servers, no good way to enumerate"
      },
      "defaultValue": "subnetBEfixed"
    },
    "vmIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new VM"
      },
    "defaultValue": "10.0.0.4"
    },
    "IPAllocationMethod": {
      "type": "string",
      "metadata": {
        "description": "Static or Dynamic IP Allocation"
      }
    },
    "vmNicNameBase": {
      "type": "string",
      "metadata": {
        "description": "NIC Name Base to create NIC Name"
      },
      "defaultValue": "nic0"
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the VM"
      },
      "defaultValue": "adPDC"
    },
    "vmFunction": {
      "type": "string",
      "metadata": {
        "description": "VM Function - PDC calls default NIC creation template, BDC calls NIC template with DNS server"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      },
      "defaultValue": "adAdministrator"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the VM Created, can add allowed values to contain costs"
      },
      "defaultValue": "Standard_D2"
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "adAvailabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the availability set that the AD VM is created in"
      },
      "defaultValue": "adAvailabilitySet"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "NewDomain"
    },
    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources such as templates and DSC modules that the script is dependent, currently references github due to lack of current azure location"
      },
      "defaultValue": "https://raw.githubusercontent.com/tzghardy/project0/master/AD_NewDomain/"
    },
    "dscModuleURLfile": {
      "type": "string",
      "metadata": {
        "description": "DSC Module URL"
      }
    },
    "dscConfigurationFunction": {
      "type": "string",
      "metadata": {
        "description": "DSC Configuration Function"
      }
    },
    "vmExtention": {
      "type": "string",
      "metadata": {
        "description": "Microsoft VM Extension"
      }
    },
    "dnsServerAddresses": {
      "type": "string",
      "metadata": {
        "description": "DNS Server Addresses, for this template, type comes is as a string"
      }
    }
  },
  "variables": {
    "deployApiVersion": "2015-01-01",
    "apiVersion": "2015-05-01-preview",
    "rgName": "[resourceGroup().name]",
    "ADassetLocation": "[concat(parameters('assetLocation'),'AD_NewDomain/')]",
    "vmNicName": "[concat(parameters('vmName'),'-',parameters('vmNICNameBase'))]",
    "VnetID": "[resourceId(parameters('networkResourceGroupName'),'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "vmSubnetRef": "[concat(variables('VnetID'),'/subnets/',parameters('subnetName'))]",
    "vmNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('vmNicName'))]",
    "vmOSDisk": "[concat(parameters('vmName'),'-osdisk')]",
    "vmDataDisk": "[concat(parameters('vmName'),'-datadisk-01')]",
    "vmDataDiskSize": "1000",
    "PDC": "",
    "BDC": "wdns",
    "nicTemplateURI": "[concat(parameters('assetLocation'),'NIC/azuredeploy_nopip',variables(parameters('vmFunction')),'.json')]",
    "nicUpdateDNSURI": "[concat(parameters('assetLocation'),'NIC/azuredeploy_nopipwdns.json')]",
    "dscModulesURI": "[concat(variables('ADassetLocation'),parameters('dscModuleURLfile'))]",
    "storagePath": "[toLower(concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/', parameters('vmName'),'/'))]",
    "addDNSServerAddresses": "[split(parameters('dnsServerAddresses'),',')]",
    "DNSServerstring": "[concat(parameters('dnsServerAddresses'),',',parameters('vmIPAddress'))]",
    "updateDNSServerAddresses": "[split(variables('DNSServerstring'),',')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('Deploy',variables('vmNicName'))]",
      "apiVersion": "[variables('deployApiVersion')]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "networkResourceGroupName": {
            "value": "[parameters('networkResourceGroupName')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "nicName": {
            "value": "[variables('vmNicName')]"
          },
          "IPAllocationMethod" : {
            "value": "[parameters('IPAllocationMethod')]"
          },
          "IPAddress": {
            "value": "[parameters('vmIPAddress')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "dnsServerAddresses": {
            "value": "[variables('addDNSServerAddresses')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/Deployments/Deploy',variables('vmNicName'))]",
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('vmOSDisk')]",
            "vhd": {
              "uri": "[concat(variables('storagePath'), variables('vmOSDisk'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat(variables('storagePath'), variables('vmDataDisk'),'.vhd')]"
              },
              "name": "[concat(variables('vmDataDisk'))]",
              "caching": "None",
              "diskSizeGB": "[variables('vmDataDiskSize')]",
              "lun": 0,
              "createOption": "empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vmNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[parameters('vmExtention')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[variables('dscModulesURI')]",
              "ConfigurationFunction": "[parameters('dscConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('Update',variables('vmNicName'))]",
      "apiVersion": "[variables('deployApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/extensions/',parameters('vmExtention'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicUpdateDNSURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "networkResourceGroupName": {
            "value": "[parameters('networkResourceGroupName')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "nicName": {
            "value": "[variables('vmNicName')]"
          },
          "IPAllocationMethod" : {
            "value": "[parameters('IPAllocationMethod')]"
          },
          "IPAddress": {
            "value": "[parameters('vmIPAddress')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "dnsServerAddresses": {
            "value": "[variables('updateDNSServerAddresses')]"
          }
        }
      }
    }
  ]
}
