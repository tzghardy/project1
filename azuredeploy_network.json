{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "location of json deployment assets"
      },
      "defaultValue": "https://raw.githubusercontent.com/tzghardy/project1/master/"
    },
    "vdcName": {
      "type": "string",
      "metadata": {
        "description": "vdcname to construct other variables"
      },
      "defaultValue": "vdc2"
    },
    "vnetDefinition": {
      "type": "object",
      "metadata": {
        "description": "vnet definition with name, addressprefix and number of subnets"
      },
      "defaultValue": {
        "vnetName":"testvnet",
        "addressPrefix":"10.0.0.0/8",
        "subnetCount":3
      }
    },
    "subnetDefinition": {
      "type": "array",
      "metadata": {
        "description": "subnet names with the assigned ip address prefix"
      },
      "defaultValue": [
        {"subnetName":"fesubnet","addressPrefix":"10.0.1.0/24","routerIPAddress":"10.0.1.11"},
        {"subnetName":"besubnet","addressPrefix":"10.0.2.0/24","routerIPAddress":"10.0.2.11"},
        {"subnetName":"secsubnet","addressPrefix":"10.0.3.0/24","routerIPAddress":"10.0.3.11"}
      ]
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "storage account type"
      },
      "defaultValue": "Standard_LRS"
    },
    "csrConfig": {
      "type": "object",
      "metadata": {
        "description": "configuration data for the Cisco CSR"
      },
      "defaultValue": {
        "vmCharacteristics": {
          "vmName": "CSR",
          "vmSize": "Standard_D2",
          "nicCount": 2,
          "nicInfo": [
            {"nicNameBase": "nic0","subnet": "fesubnet","IPAddress": "10.0.1.14", "IPAllocationMethod": "Static"},
            {"nicNameBase": "nic1","subnet": "besubnet","IPAddress": "10.0.2.14", "IPAllocationMethod": "Static"}
          ],
        },
        "vmGalleryInfo": {
          "imagePublisher": "cisco",
          "imageOffer": "cisco-csr-1000v",
          "imageSKU": "csr-azure-byol"
        },
        "publicIPInfo": {
          "publicIPNameBase": "CSR",
          "domainNameLabel": "abracisco01new",
          "publicIPAllocationMethod": "Dynamic"
        },
        "adminUsername": "csrAdministrator",
        "adminPassword": "tempkey123!",
        "sshPublicKey": "",
        "authType": "password"
      }
    },
    "paloConfig": {
      "type": "object",
      "metadata": {
        "description": "configuration data for the Cisco CSR"
      },
      "defaultValue": {
        "vmCharacteristics": {
          "vmName": "palo",
          "vmSize": "Standard_D3",
          "nicCount": 3,
          "nicInfo": [
            {"nicNameBase": "nic0","subnet": "secsubnet","IPAddress": "10.0.3.11", "IPAllocationMethod": "Static"},
            {"nicNameBase": "nic1","subnet": "fesubnet","IPAddress": "10.0.1.11", "IPAllocationMethod": "Static"},
            {"nicNameBase": "nic2","subnet": "besubnet","IPAddress": "10.0.2.11", "IPAllocationMethod": "Static"}
          ],
        },
        "vmGalleryInfo": {
          "imagePublisher": "paloaltonetworks",
          "imageOffer": "vmseries1",
          "imageSKU": "byol"
        },
        "publicIPInfo": {
          "publicIPNameBase": "PALO",
          "domainNameLabel": "abrapalo01new",
          "publicIPAllocationMethod": "Dynamic"
        },
        "adminUsername": "paloAdministrator",
        "adminPassword": "tempkey123!",
        "sshPublicKey": "",
        "authType": "password"
      }
    },
  },
  "variables": {
    "NSGSetupURI": "[concat(parameters('assetLocation'),'NetSecGroup/azuredeploy.json')]",
    "UDRSetupURI": "[concat(parameters('assetLocation'),'UserDefRoute/azuredeploy.json')]",
    "VNETSetupURI": "[concat(parameters('assetLocation'),'VNET/azuredeploy.json')]",
    "storageSetupURI": "[concat(parameters('assetLocation'),'StorageAccount/azuredeploy.json')]",
    "csrSetupURI": "[concat(parameters('assetLocation'),'cisco-csr-1000v/azuredeploy.json')]",
    "paloSetupURI": "[concat(parameters('assetLocation'),'Palo/azuredeploy.json')]",
    "location": "[resourceGroup().location]",
    "apiVersion": "2015-01-01",
  },
  "resources": [
    {
      "name": "DeployNetworkSecurityGroups",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[variables('NSGSetupURI')]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "vnetDefinition": {
            "value": "[parameters('vnetDefinition')]"
          },
          "subnetDefinition": {
            "value": "[parameters('subnetDefinition')]"
          }
        }
      }
    },
    {
      "name": "[concat('DeployUserDefinedRoutes',copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [],
      "copy": {
        "name": "iteration",
        "count": "[parameters('vnetDefinition').subnetCount]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('UDRSetupURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]",
          },
          "subnetName": {
            "value": "[parameters('subnetDefinition')[copyIndex()].subnetName]"
          },
          "subnetAddressPrefix": {
            "value": "[parameters('subnetDefinition')[copyIndex()].addressPrefix]"
          },
          "routerIPAddress": {
            "value": "[parameters('subnetDefinition')[copyIndex()].routerIPAddress]"
          }
        }
      }
    },
    {
      "name": "DeployVnetWithSubnet0",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/DeployNetworkSecurityGroups"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[variables('VNETSetupURI')]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "vnetDefinition": {
            "value": "[parameters('vnetDefinition')]"
          },
          "subnets": {
            "value": []
          },
          "SubnetToAddName": {
            "value": "[parameters('subnetDefinition')[0].subnetName]"
          },
          "SubnetToAddAddressPrefix": {
            "value": "[parameters('subnetDefinition')[0].addressPrefix]"
          }
        }
      }
    },
    {
      "name": "[concat('DeployVnetWithSubnet',copyIndex(1))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/DeployNetworkSecurityGroups",
        "Microsoft.Resources/deployments/DeployVnetWithSubnet0"
      ],
      "copy": {
        "name": "iteration",
        "count": "[add(parameters('vnetDefinition').subnetCount,-1)]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[variables('VNETSetupURI')]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "vnetDefinition": {
            "value": "[parameters('vnetDefinition')]"
          },
          "subnets": {
            "value": "[reference(concat('DeployVnetWithSubnet',copyIndex())).outputs.vnetSubnets.value]"
          },
          "SubnetToAddName": {
            "value": "[parameters('subnetDefinition')[copyIndex(1)].subnetName]"
          },
          "SubnetToAddAddressPrefix": {
            "value": "[parameters('subnetDefinition')[copyIndex(1)].addressPrefix]"
          }
        }
      }
    },
    {
      "name": "DeployStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('storageSetupURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },
    {
      "name": "DeployCiscoCSR1000v",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('csrSetupURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "vdcName": {
            "value": "[parameters('vdcName')]"
          },
          "storageAccountName": {
            "value": "[reference('DeployStorageAccount').outputs.storageAccountNameOut.value]"
          },
          "vnetDefinition": {
            "value": "[parameters('vnetDefinition')]"
          },
          "vmCharacteristics": {
            "value": "[parameters('csrConfig').vmCharacteristics]"
          },
          "vmGalleryInfo": {
            "value": "[parameters('csrConfig').vmGalleryInfo]"
          },
          "publicIPInformation": {
            "value": "[parameters('csrConfig').publicIPInfo]"
          },
          "adminUsername": {
            "value": "[parameters('csrConfig').adminUsername]"
          },
          "adminPassword": {
            "value": "[parameters('csrConfig').adminPassword]"
          },
          "sshPublicKey": {
            "value": "[parameters('csrConfig').sshPublicKey]"
          },
          "authenticationType": {
            "value": "[parameters('csrConfig').authType]"
          },
          "assetLocation": {
            "value": "[parameters('assetLocation')]"
          }
        }
      }
    },
    {
      "name": "DeployPalo",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('paloSetupURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "vdcName": {
            "value": "[parameters('vdcName')]"
          },
          "storageAccountName": {
            "value": "[reference('DeployStorageAccount').outputs.storageAccountNameOut.value]"
          },
          "vnetDefinition": {
            "value": "[parameters('vnetDefinition')]"
          },
          "vmCharacteristics": {
            "value": "[parameters('paloConfig').vmCharacteristics]"
          },
          "vmGalleryInfo": {
            "value": "[parameters('paloConfig').vmGalleryInfo]"
          },
          "publicIPInformation": {
            "value": "[parameters('paloConfig').publicIPInfo]"
          },
          "adminUsername": {
            "value": "[parameters('paloConfig').adminUsername]"
          },
          "adminPassword": {
            "value": "[parameters('paloConfig').adminPassword]"
          },
          "sshPublicKey": {
            "value": "[parameters('paloConfig').sshPublicKey]"
          },
          "authenticationType": {
            "value": "[parameters('paloConfig').authType]"
          },
          "assetLocation": {
            "value": "[parameters('assetLocation')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "NumberOfSubnets": {
      "type": "int",
      "value": "[parameters('vnetDefinition').subnetCount]"
    },
    "subnets": {
      "type": "array",
      "value": "[reference(concat('DeployVnetWithSubnet',add(parameters('vnetDefinition').subnetCount,-1))).outputs.vnetSubnets.value]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[reference('DeployStorageAccount').outputs.storageAccountNameOut.value]"
    }
  }
}
