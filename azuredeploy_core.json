{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "location of json deployment assets"
      },
      "defaultValue": "https://raw.githubusercontent.com/tzghardy/project1/master/"
    },
    "vdcName": {
      "type": "string",
      "metadata": {
        "description": "vdcname to construct other variables"
      }
    },
    "networkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "resource group that contains the vnet for the vdc"
      }
    },
    "vnetDefinition": {
      "type": "object",
      "metadata": {
        "description": "vnet definition with name, addressprefix and number of subnets"
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "storage account type"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "availability set name"
      }
    },
    "pdcConfig": {
      "type": "object",
      "metadata": {
        "description": "build information for pdc"
      }
    },
    "bdcConfig": {
      "type": "object",
      "metadata": {
        "description": "build information for bdc"
      }
    }
  },
  "variables": {
    "AVsetupURI": "[concat(parameters('assetLocation'),'AvailabilitySet/azuredeploy.json')]",
    "ADSetupURI": "[concat(parameters('assetLocation'),'AD_NewDomain/')]",
    "DCSetupURI": "[concat(variables('ADSetupURI'),'azuredeploy.json')]",
    "VNETSetupURI": "[concat(parameters('assetLocation'),'VNET/azuredeploy.json')]",
    "nicUpdateDNSURI": "[concat(parameters('assetLocation'),'NIC/azuredeploy_nopipwdns.json')]",
    "storageSetupURI": "[concat(parameters('assetLocation'),'StorageAccount/azuredeploy.json')]",
    "location": "[resourceGroup().location]",
    "apiVersion": "2015-01-01",
  },
  "resources": [
    {
      "name": "DeployAvailabilitySet",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('AVsetupURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "availabilitySetName": {
            "value": "[parameters('availabilitySetName')]"
          }
        }
      }
    },
    {
      "name": "DeployStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('storageSetupURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },
    {
      "name": "DeployPDC",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/DeployAvailabilitySet",
        "Microsoft.Resources/deployments/DeployStorageAccount"
      ],
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('DCSetupURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "vdcName": {
            "value": "[parameters('vdcName')]"
          },
          "networkResourceGroupName": {
            "value": "[parameters('networkResourceGroupName')]"
          },
          "vnetName": {
            "value": "[parameters('vnetDefinition').vnetName]"
          },
          "storageAccountName":{
            "value": "[reference('DeployStorageAccount').outputs.storageAccountNameOut.value]"
          },
          "subnetName": {
            "value": "[parameters('pdcConfig').vmCharacteristics.nicInfo[0].subnet]"
          },
          "vmIPAddress": {
            "value": "[parameters('pdcConfig').vmCharacteristics.nicInfo[0].IPAddress]"
          },
          "vmNicNameBase": {
            "value": "[parameters('pdcConfig').vmCharacteristics.nicInfo[0].nicNameBase]"
          },
          "vmName": {
            "value": "[parameters('pdcConfig').vmCharacteristics.vmName]"
          },
          "vmFunction": {
            "value": "[parameters('pdcConfig').vmCharacteristics.vmFunction]"
          },
          "adminUsername": {
            "value": "[parameters('pdcConfig').adminUsername]"
          },
          "adminPassword": {
            "value": "[parameters('pdcConfig').adminPassword]"
          },
          "vmSize": {
            "value": "[parameters('pdcConfig').vmCharacteristics.vmSize]"
          },
          "imagePublisher": {
            "value": "[parameters('pdcConfig').vmGalleryInfo.imagePublisher]"
          },
          "imageOffer": {
            "value": "[parameters('pdcConfig').vmGalleryInfo.imageOffer]"
          },
          "imageSKU": {
            "value": "[parameters('pdcConfig').vmGalleryInfo.imageSKU]"
          },
          "adAvailabilitySetName": {
            "value": "[parameters('availabilitySetName')]"
          },
          "domainName": {
            "value": "[parameters('pdcConfig').domainName]"
          },
          "assetLocation": {
            "value": "[parameters('assetLocation')]"
          },
          "dscModuleURLfile": {
            "value": "[parameters('pdcConfig').dscInfo.dscModuleURLfile]"
          },
          "dscConfigurationFunction": {
            "value": "[parameters('pdcConfig').dscInfo.dscConfigurationFunction]"
          },
          "vmExtention": {
            "value": "[parameters('pdcConfig').dscInfo.vmExtention]"
          },
          "IPAllocationMethod": {
            "value": "[parameters('pdcConfig').vmCharacteristics.nicInfo[0].IPAllocationMethod]"
          },
          "dnsServerAddresses": {
            "value": "[parameters('pdcConfig').vmCharacteristics.nicInfo[0].IPAddress]"
          },
        }
      }
    },
    {
      "name": "DeployBDC",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/DeployPDC"
      ],
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('DCSetupURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "vdcName": {
            "value": "[parameters('vdcName')]"
          },
          "networkResourceGroupName": {
            "value": "[parameters('networkResourceGroupName')]"
          },
          "vnetName": {
            "value": "[parameters('vnetDefinition').vnetName]"
          },
          "storageAccountName":{
            "value": "[reference('DeployStorageAccount').outputs.storageAccountNameOut.value]"
          },
          "subnetName": {
            "value": "[parameters('bdcConfig').vmCharacteristics.nicInfo[0].subnet]"
          },
          "vmIPAddress": {
            "value": "[parameters('bdcConfig').vmCharacteristics.nicInfo[0].IPAddress]"
          },
          "vmNicNameBase": {
            "value": "[parameters('bdcConfig').vmCharacteristics.nicInfo[0].nicNameBase]"
          },
          "vmName": {
            "value": "[parameters('bdcConfig').vmCharacteristics.vmName]"
          },
          "vmFunction": {
            "value": "[parameters('bdcConfig').vmCharacteristics.vmFunction]"
          },
          "adminUsername": {
            "value": "[parameters('bdcConfig').adminUsername]"
          },
          "adminPassword": {
            "value": "[parameters('bdcConfig').adminPassword]"
          },
          "vmSize": {
            "value": "[parameters('bdcConfig').vmCharacteristics.vmSize]"
          },
          "imagePublisher": {
            "value": "[parameters('bdcConfig').vmGalleryInfo.imagePublisher]"
          },
          "imageOffer": {
            "value": "[parameters('bdcConfig').vmGalleryInfo.imageOffer]"
          },
          "imageSKU": {
            "value": "[parameters('bdcConfig').vmGalleryInfo.imageSKU]"
          },
          "adAvailabilitySetName": {
            "value": "[parameters('availabilitySetName')]"
          },
          "domainName": {
            "value": "[parameters('bdcConfig').domainName]"
          },
          "assetLocation": {
            "value": "[parameters('assetLocation')]"
          },
          "dscModuleURLfile": {
            "value": "[parameters('bdcConfig').dscInfo.dscModuleURLfile]"
          },
          "dscConfigurationFunction": {
            "value": "[parameters('bdcConfig').dscInfo.dscConfigurationFunction]"
          },
          "vmExtention": {
            "value": "[parameters('bdcConfig').dscInfo.vmExtention]"
          },
          "IPAllocationMethod": {
            "value": "[parameters('bdcConfig').vmCharacteristics.nicInfo[0].IPAllocationMethod]"
          },
          "dnsServerAddresses": {
            "value": "[parameters('pdcConfig').vmCharacteristics.nicInfo[0].IPAddress]"
          },
        }
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[reference('DeployStorageAccount').outputs.storageAccountNameOut.value]"
    }
  }
}
